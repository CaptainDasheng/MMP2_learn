#!/usr/bin/env python 

class CheckStatus(object):

    def __init__(self, tasks=None, status='done', *args, **kwargs):


        #check the number and name of tasks under user direction %

        self.check_all_tasks_pool()

        #

        if self.jump2_tasks() is not None:

            if tasks == 'all':

                self.check_all()

            elif isinstance(int(tasks), int):

                self.check_task(tasks)

            else:

                raise IOError('invalid tasks number')

        else:

            print """No running or waiting tasks under this user,
                     
                     please use 'jump2 --r input.py'  to produce

                     the input files.
                  """
    #whether there is jump2 tasks under this user direction %
    def jump2_tasks(self):

        tasks = None 

        return tasks
    
    # check all of running tasks under the user direction %
    def check_all(self):

        pass

    # check the given number of tasks under the user direction % 
    def check_task(self, value):

        pass 

    def __repr__(self):

        pass
